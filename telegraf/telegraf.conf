[agent]
  omit_hostname = true

[[outputs.influxdb]]
  exclude_database_tag = true

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  report_active = true

[[inputs.disk]]
  mount_points = [
    "/hostfs",
    "/hostfs/data"
  ]
  ignore_fs = [
    "tmpfs"
  ]

[[inputs.diskio]]
  devices = [
    "nvme?n?",
    "sd?"
  ]

[[inputs.docker]]
  container_name_include = [
    "backup",
    "certbot",
    "ddns",
    "grafana",
    "influxdb",
    "iperf",
    "jackett",
    "nginx",
    "oidc",
    "plex",
    "radarr",
    "sonarr",
    "tautulli",
    "telegraf",
    "transmission"
  ]
  container_state_include = ["*"]
  docker_label_exclude = ["*"]
  perdevice = false
  total = true
  tagexclude = [
    "container_image",
    "container_status",
    "container_version",
    "engine_host",
    "server_version"
  ]

[[inputs.docker_log]]
  container_name_include = [
    "grafana",
    "influxdb",
    "iperf",
    "jackett",
    "nginx",
    "oidc",
    "plex",
    "radarr",
    "sonarr",
    "tautulli",
    "telegraf",
    "transmission"
  ]
  docker_label_exclude = ["*"]
  tagexclude = [
    "container_image",
    "container_version"
  ]

[[inputs.influxdb]]
  namepass = [
    "influxdb_database",
    "influxdb_queryExecutor",
    "influxdb_shard"
  ]
  taginclude = [
    "database"
  ]

[[aggregators.basicstats]]
  namepass = [
    "influxdb_shard"
  ]
  period = "10s"
  drop_original = true
  stats = [
    "sum"
  ]


[[inputs.internal]]
  taginclude = [
    "aggregator",
    "input",
    "output",
    "processor"
  ]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.net]]
  interfaces = [
    "en*"
  ]

[[inputs.nginx]]
  urls = [
    "http://localhost:8080"
  ]

[[inputs.processes]]

[[inputs.procstat]]
  process_name = "grafana"
  pattern = "grafana-server"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "influxdb"
  pattern = "influxd"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "iperf"
  pattern = "iperf3"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "jackett"
  pattern = "Jackett"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "nginx"
  pattern = "nginx"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "oidc"
  pattern = "oidc-rp"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "plex"
  pattern = "Plex"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "radarr"
  pattern = "Radarr"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "sonarr"
  pattern = "NzbDrone"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "tautulli"
  pattern = "Tautulli"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "telegraf"
  pattern = "telegraf"
  pid_finder = "native"

[[inputs.procstat]]
  process_name = "transmission"
  pattern = "transmission-daemon"
  pid_finder = "native"

[[aggregators.basicstats]]
  namepass = [
    "procstat"
  ]
  fielddrop = [
    "pid"
  ]
  taginclude = [
    "process_name"
  ]
  period = "10s"
  drop_original = true
  stats = [
    "count",
    "sum"
  ]

[[inputs.sensors]]

[[inputs.swap]]

[[inputs.system]]

[[inputs.tail]]
  files = [
    "/var/log/nginx/access.log"
  ]
  data_format = "grok"
  grok_patterns = [
    "%{NOTSPACE:ip} - %{NOTSPACE:user:tag} \\[%{HTTPDATE:ts:ts-httpd}\\] \"%{NOTSPACE:method} %{URIPATH:path}(\\?%{NOTSPACE:query}?)? HTTP/%{NUMBER:http_version:tag}\" %{NUMBER:status:tag} %{NUMBER:response_size:int} %{NUMBER:request_size:int} %{NUMBER:duration:float} %{NOTSPACE:host} %{NOTSPACE:upstream:tag}"
  ]
  tagexclude = [
    "path"
  ]

[[processors.rename]]
  namepass = [
    "tail"
  ]

  [[processors.rename.replace]]
    measurement = "tail"
    dest = "access_log"
