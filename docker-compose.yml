services:
  caddy:
    container_name: caddy
    build: ./caddy
    environment:
      CLOUDFLARE_API_TOKEN: $CLOUDFLARE_API_TOKEN
      DOMAIN: $DOMAIN
      EMAIL: $EMAIL
      USERNAME: $USERNAME
      PASSWORD: $PASSWORD
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR/caddy/data:/data
      - $SERVER_DIR/caddy/config:/config
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro

  ddns:
    container_name: ddns
    image: pkoenig10/ddns-cloudflare
    environment:
      DOMAIN: $DOMAIN
      API_TOKEN: $CLOUDFLARE_API_TOKEN
    network_mode: host
    profiles:
      - task
    volumes:
      - /etc/localtime:/etc/localtime:ro

  oidc:
    container_name: oidc
    image: pkoenig10/oidc-rp
    command: >
      -external-url https://auth.$DOMAIN
      -client-id $CLIENT_ID
      -client-secret $CLIENT_SECRET
      -token-key $COOKIE_KEY
      -cookie-domain $DOMAIN
      -config-file /config.yml
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./oidc/config.yml:/config.yml:ro

  telegraf:
    container_name: telegraf
    image: telegraf
    environment:
      GRAFANA_URL: $GRAFANA_URL
      GRAFANA_USERNAME: $GRAFANA_USERNAME
      GRAFANA_PASSWORD: $GRAFANA_PASSWORD
      HOST_ETC: /hostfs/etc
      HOST_PROC: /hostfs/proc
      HOST_RUN: /hostfs/run
      HOST_SYS: /hostfs/sys
      HOST_VAR: /hostfs/var
      HOST_MOUNT_PREFIX: /hostfs
    network_mode: host
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  iperf:
    container_name: iperf
    image: networkstatic/iperf3
    command: >
      -s
    ports:
      - 5201:5201
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro

  plex:
    container_name: plex
    image: plexinc/pms-docker:beta
    devices:
      - /dev/dri
    environment:
      PLEX_UID: $UID
      PLEX_GID: $GID
      ADVERTISE_IP: http://$LOCAL_IP:32400
      ALLOWED_NETWORKS: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
    ports:
      - 32400:32400
    restart: unless-stopped
    tmpfs:
      - /transcode
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR/plex/config:/config
      - $DATA_DIR/tv:/tv
      - $DATA_DIR/movies:/movies

  tautulli:
    container_name: tautulli
    image: tautulli/tautulli
    environment:
      PUID: $UID
      PGID: $GID
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR/tautulli/config:/config

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    environment: &environment-linuxserver
      PUID: $UID
      PGID: $GID
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR/radarr/config:/config
      - $DATA_DIR/downloads:/data
      - $DATA_DIR/movies:/movies

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    environment: *environment-linuxserver
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR/sonarr/config:/config
      - $DATA_DIR/downloads:/data
      - $DATA_DIR/tv:/tv

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    environment: *environment-linuxserver
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR/jackett/config:/config

  transmission:
    container_name: transmission
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    environment:
      OPENVPN_PROVIDER: $OPENVPN_PROVIDER
      OPENVPN_USERNAME: $OPENVPN_USERNAME
      OPENVPN_PASSWORD: $OPENVPN_PASSWORD
      TRANSMISSION_WEB_HOME: /web
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR/transmission/config:/config
      - $DATA_DIR/downloads:/data
      - $TRANSMISSION_WEB_DIR:/web:ro

  backup:
    container_name: backup
    image: pkoenig10/backup-google
    command: >
      -bucket-name $BUCKET_NAME
      -config-file /config.yml
      -credentials-file /credentials.json
    profiles:
      - task
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $SERVER_DIR:/files
      - ./backup/config.yml:/config.yml:ro
      - ./backup/credentials.json:/credentials.json:ro
